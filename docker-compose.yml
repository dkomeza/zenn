name: zenn

services:
  backend:
    container_name: zenn-backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      additional_contexts:
        - shared=./shared
    restart: unless-stopped

    healthcheck:
      test:
        [
          "CMD",
          "bun",
          "-e",
          "fetch('http://127.0.0.1:5000/health').then((r) => {if (r.status !== 200) throw new Error(r.status)})",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./shared:/shared
      - /shared/node_modules

    networks:
      - proxy
      - backend

    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy

  web:
    container_name: zenn-web
    image: nginx:alpine
    restart: unless-stopped

    ports:
      - "8080:80"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

    networks:
      - proxy

    depends_on:
      backend:
        condition: service_healthy

  db:
    container_name: zenn-db
    image: postgres:13
    restart: unless-stopped

    environment:
      POSTGRES_USER: zenn
      POSTGRES_PASSWORD: zenn
      POSTGRES_DB: zenn

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zenn"]
      interval: 5s
      timeout: 5s
      retries: 10

    volumes:
      - zenn-db-data:/var/lib/postgresql/data
    networks:
      - backend
  cache:
    container_name: zenn-redis
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --appendonly yes

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

    networks:
      - backend

    volumes:
      - zenn-redis-data:/data

networks:
  proxy:
    driver: bridge
  backend:
    internal: true

volumes:
  zenn-db-data:
    driver: local
  zenn-redis-data:
    driver: local
